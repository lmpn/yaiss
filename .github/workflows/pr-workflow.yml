name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy_check:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:sql/images.db
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        run: |
          cargo install sqlx-cli
          sh ./sql/create-db.sh
          cargo sqlx prepare --database-url $DATABASE_URL
      - name: Run Clippy
        run: |
          cargo clippy --all-targets --all-features
  
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: sqlite:sql/test.db
      INI_CONFIGURATION: resources/dev.configuration.ini
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Prepare
      run: |
        cargo install sqlx-cli
        sh ./sql/create-db.sh
        cargo sqlx prepare --database-url $DATABASE_URL
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - id: coverage  
      uses: actions-rs/grcov@v0.1
    - uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ steps.coverage.outputs.report }}
